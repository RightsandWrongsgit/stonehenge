version: '3.2'

services:
  dnsmasq:
    image: andyshinn/dnsmasq:2.75
    container_name: "${PREFIX}-dnsmasq"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    command: "--address=/.${DOCKER_DOMAIN}/127.0.0.1"
    dns: 8.8.8.8

  traefik:
    image: traefik
    container_name: "${PREFIX}-traefik"
    restart: unless-stopped
    command: |-
      --api
      --logLevel=DEBUG
      --docker
      --docker.watch="true"
      --docker.domain="${DOCKER_DOMAIN}"
      --docker.network="${NETWORK_NAME}"
      --docker.exposedbydefault="false"
    labels:
      traefik.enable: true
      traefik.backend: traefik
      traefik.port: 8080
      traefik.frontend.rule: "Host:traefik.${DOCKER_DOMAIN}"
    ports:
      - "80:80"
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

  portainer:
    image: portainer/portainer
    container_name: "${PREFIX}-portainer"
    restart: unless-stopped
    command: |-
      --no-auth -H unix:///var/run/docker.sock
      --logo "${LOGO_URL}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: true
      traefik.backend: portainer
      traefik.port: 9000
      traefik.frontend.rule: "Host:portainer.${DOCKER_DOMAIN}"

  mailhog:
    image: mailhog/mailhog
    container_name: "${PREFIX}-mailhog"
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.backend: mailhog
      traefik.port: 8025
      traefik.frontend.rule: "Host:mailhog.${DOCKER_DOMAIN}"

  ssh-agent:
    image: amazeeio/ssh-agent
    container_name: "${PREFIX}-ssh-agent"
    restart: unless-stopped
    volumes:
      - ~/.ssh:/ssh

networks:
  default:
    external:
      name: "${NETWORK_NAME}"
