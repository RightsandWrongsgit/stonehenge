version: '2'

services:
  dnsmasq:
    image: andyshinn/dnsmasq:2.75
    container_name: "druidfi-dnsmasq"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    cap_add:
      - NET_ADMIN
    command: "--address=/.${DOCKER_DOMAIN}/127.0.0.1"
    labels:
      - 'traefik.enable=false'
    networks:
      - druidfi-network

  proxy:
    image: traefik
    container_name: "druidfi-traefik"
    restart: always
    #restart: unless-stopped
    command: |-
      --docker
      --api
      --docker.domain=${DOCKER_DOMAIN}
      --logLevel=DEBUG
    networks:
      - druidfi-network
    labels:
      - 'traefik.backend=proxy'
      - 'traefik.port=8080'
      - 'traefik.frontend.rule=Host:traefik.${DOCKER_DOMAIN}'
    ports:
      - "80:80"
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

  portainer:
    image: portainer/portainer
    container_name: "druidfi-portainer"
    command: |-
      --no-auth -H unix:///var/run/docker.sock
      --logo "https://www.druid.fi/themes/custom/druid/logo.svg"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - druidfi-network
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${DOCKER_DOMAIN}'

  mailhog:
    image: mailhog/mailhog
    container_name: "druidfi-mailhog"
    networks:
      - druidfi-network
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.${DOCKER_DOMAIN}'

networks:
  druidfi-network:
    external: true
