.PHONY: down help install status stop up update
.DEFAULT_GOAL := help

down: ## Tear down Stonehenge
	$(call colorecho, "\nTear down Stonehenge")
	$(call colorecho, "\n- Stop the containers...\n")
	@docker-compose down
	$(call colorecho, "\n- Remove resolver file...\n")
	@. .env && sudo rm -f /etc/resolver/$$DOCKER_DOMAIN && echo "Resolver file removed" || echo "Already removed"
	$(call colorecho, "\n- DONE!\n")

help: ## Print this help
	$(call colorecho, "\nAvailable commands for Stonehenge:\n")
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	@echo ""

install: ## Install Stonehenge
	$(call colorecho, "\nInstall Stonehenge\n")

status: ## Stonehenge status
	$(call colorecho, "\nStonehenge status\n")
	@docker-compose ps

stop: ## Stop Stonehenge containers
	$(call colorecho, "\nStop Stonehenge containers\n")
	@docker-compose stop
	$(call colorecho, "\n- DONE!\n")

up: ## Launch Stonehenge
	$(call colorecho, "\nStart Stonehenge")
	$(call colorecho, "\n- Set resolver file...\n")
	@. .env && sudo sh -c "echo '$$RESOLVER_BODY' > /etc/resolver/$$DOCKER_DOMAIN" && echo "Resolver file created"
	$(call colorecho, "\n- Create network $$NETWORK_NAME...\n")
	@. .env && docker network inspect $$NETWORK_NAME > /dev/null || docker network create $$NETWORK_NAME && echo "Network created"
	$(call colorecho, "\n- Start the containers...\n")
	@docker-compose up -d
	$(call colorecho, "\n- SUCCESS! Open http://portainer.$$DOCKER_DOMAIN...\n")

update: ## Update Stonehenge
	$(call colorecho, "\nUpdate Stonehenge")
	$(call colorecho, "\n- Pull the latest code...\n")
	@git pull
	$(call colorecho, "\n- Restart and recreate the containers...\n")
	@docker-compose up -d --force-recreate
	$(call colorecho, "\nSUCCESS!\n")

define colorecho
    @tput -T xterm setaf 3
    @. .env && echo $1
    @tput -T xterm sgr0
endef

define RESOLVER_BODY
# Generated by druidfi/stonehenge Makefile
nameserver 127.0.0.1
port 53
endef
export RESOLVER_BODY
