.PHONY: down help up
.DEFAULT_GOAL := help

DNSMASQ_NAME := druidfi-dnsmasq
DNSMASQ_DOMAIN := docker.druid.fi
NETWORK_NAME := druidfi-network

down: ## Tear down Druid Stonehenge
	$(call colorecho, "\nTear down Druid Stonehenge")
	$(call colorecho, "\n- Stop the containers...\n")
	@docker-compose down
	$(call colorecho, "\n- Remove resolver file...\n")
	@sudo rm /etc/resolver/$(DNSMASQ_DOMAIN)
	$(call colorecho, "\n- DONE!\n")

help: ## Print this help
	$(call colorecho, "\nAvailable commands for Druid Stonehenge:\n")
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	@echo ""

install: ## Install Druid Stonehenge
	$(call colorecho, "\nInstall Druid Stonehenge\n")

stop: ## Stop Druid Stonehenge containers
	$(call colorecho, "\nStop Druid Stonehenge containers\n")
	@docker-compose stop

up: ## Launch Druid Stonehenge
	$(call colorecho, "\nStart Druid Stonehenge")
	$(call colorecho, "\n- Set $(DNSMASQ_NAME) and resolver file...\n")
	@sudo sh -c "echo '$$RESOLVER_BODY' > /etc/resolver/$(DNSMASQ_DOMAIN)"
	$(call colorecho, "\n- Create network $(NETWORK_NAME)...\n")
	@docker network inspect $(NETWORK_NAME) > /dev/null || docker network create $(NETWORK_NAME)
	$(call colorecho, "\n- Start the containers...\n")
	@docker-compose up -d
	$(call colorecho, "\n- DONE! Check http://portainer.docker.druid.fi...\n")

define colorecho
    @tput -T xterm setaf 3
    @echo $1
    @tput -T xterm sgr0
endef

define RESOLVER_BODY
# Generated by druidfi Makefile
nameserver 127.0.0.1
port 53
endef
export RESOLVER_BODY
